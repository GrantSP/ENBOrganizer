<Window x:Class="ENBOrganizer.App.MainView" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:views="clr-namespace:ENBOrganizer.App.Views"
        xmlns:converters="clr-namespace:ENBOrganizer.App.Converters"
        xmlns:viewModels="clr-namespace:ENBOrganizer.App.ViewModels"
        xmlns:entities="clr-namespace:ENBOrganizer.Domain.Entities;assembly=ENBOrganizer.Domain"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Title="ENB Organizer"
        MinWidth="640"
        MinHeight="360"
        Width="800"
        Height="600"
        SnapsToDevicePixels="True"
        UseLayoutRounding="True"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="14"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{StaticResource MaterialDesignFont}"
        DataContext="{Binding Source={StaticResource ViewModelLocator}, Path=MainViewModel, Mode=OneTime}">
    <Window.Resources>
        <ResourceDictionary>
            <converters:PathToIconConverter x:Key="PathToIconConverter" />

            <DataTemplate DataType="{x:Type viewModels:GameDetailViewModel}">
                <views:GameDetailView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:AddBinaryViewModel}">
                <views:AddBinaryView />
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModels:AddMasterListItemViewModel}">
                <views:AddMasterListItemView />
            </DataTemplate>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost Identifier="RootDialog" DialogContent="{Binding CurrentDialogViewModel}" IsOpen="{Binding IsDialogOpen}">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel>
                    <DockPanel.Resources>
                        <DataTemplate DataType="{x:Type viewModels:GamesViewModel}">
                            <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                <materialDesign:PackIcon Kind="GamepadVariant" Width="24" Height="24" 
                                                         VerticalAlignment="Center" Margin="0 0 5 0" />
                                <TextBlock Text="Games" VerticalAlignment="Center" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:BinariesViewModel}">
                            <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                <materialDesign:PackIcon Kind="PackageVariantClosed" Width="24" Height="24" 
                                                         VerticalAlignment="Center" Margin="0 0 5 0" />
                                <TextBlock Text="Binaries" VerticalAlignment="Center" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:MasterListViewModel}">
                            <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                <materialDesign:PackIcon Kind="FormatListBulleted" Width="24" Height="24" 
                                                         VerticalAlignment="Center" Margin="0 0 5 0" />
                                <TextBlock Text="Master List" VerticalAlignment="Center" />
                            </StackPanel>
                        </DataTemplate>
                    </DockPanel.Resources>

                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                                  DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="16"
                                  IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                    <ListBox ItemsSource="{Binding PageViewModels, Mode=OneWay}" 
                             SelectedItem="{Binding CurrentPageViewModel}" Margin="0 16 0 16" />
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <DockPanel>
                <DockPanel.Resources>
                    <DataTemplate DataType="{x:Type viewModels:GamesViewModel}">
                        <views:GamesView />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:MasterListViewModel}">
                        <views:MasterListView />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type viewModels:BinariesViewModel}">
                        <views:BinariesView />
                    </DataTemplate>
                </DockPanel.Resources>
                <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                          Mode="PrimaryMid" DockPanel.Dock="Top">
                    <DockPanel>
                        <ToggleButton x:Name="MenuToggleButton" Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="{Binding IsMenuToggleChecked}" />
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                            <StackPanel>
                                <Button Content="Don't know if I'll need this" />
                                <Button Content="Nice Popup" />
                                <Button Content="Goodbye" />
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <ComboBox ItemsSource="{Binding Source={StaticResource ViewModelLocator}, Path=GamesViewModel.Models, Mode=OneWay}"
                                  SelectedItem="{Binding Source={StaticResource ViewModelLocator}, Path=GamesViewModel.CurrentGame, Mode=TwoWay}"
                                  IsSynchronizedWithCurrentItem="True" MinWidth="100" materialDesign:TextFieldAssist.Hint="Select a game"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{DynamicResource PrimaryHueMidForegroundBrush}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding ExecutablePath, Converter={StaticResource PathToIconConverter}, Mode=OneWay}" 
                                               Width="32" Height="32" />
                                        <Label Content="{Binding Name, Mode=OneWay}" VerticalAlignment="Center" FontSize="22" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                </materialDesign:ColorZone>
                <ContentControl Content="{Binding CurrentPageViewModel}" />
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
